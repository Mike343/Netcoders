@model Coders.Web.Models.Users.UserCreate
@section scripts
{
    <script src="/content/scripts/coders.js" type="text/javascript"></script>
    <script src="/content/scripts/coders.form.js" type="text/javascript"></script>
}
<h2>@Resources.Titles.CreateAnAccount</h2>
<div class="form">
	@{Html.BeginRouteForm(UsersRoutes.Create);}
	<div class="fields">
		<div class="field field-input">
			<label for="Name">@Resources.Titles.Name:</label>
			@Html.TextBoxFor(x => x.Name)
			@Html.ValidationMessageFor(x => x.Name)
		</div>
		<div class="field field-input">
			<label for="EmailAddress">@Resources.Titles.EmailAddress:</label>
			@Html.TextBoxFor(x => x.EmailAddress)
			@Html.ValidationMessageFor(x => x.EmailAddress)
		</div>
		<div class="field field-input">
			<label for="VerifyEmailAddress">@Resources.Titles.VerifyWith.FormatInvariant(Resources.Titles.EmailAddress):</label>
			@Html.TextBoxFor(x => x.VerifyEmailAddress)
			@Html.ValidationMessageFor(x => x.VerifyEmailAddress)
		</div>
		<div class="field field-input">
			<label for="Password">@Resources.Titles.Password:</label>
			@Html.PasswordFor(x => x.Password)
			@Html.ValidationMessageFor(x => x.Password)
		</div>
		<div class="field field-input">
			<label for="VerifyPassword">@Resources.Titles.VerifyWith.FormatInvariant(Resources.Titles.Password):</label>
			@Html.PasswordFor(x => x.VerifyPassword)
			@Html.ValidationMessageFor(x => x.VerifyPassword)
		</div>
		<div class="field field-select">
			<label for="Country">@Resources.Titles.Country:</label>
			@Html.DropDownListFor(x => x.CountryId, Model.Countries.SelectList(x => x.Id, x => x.Title), new { @class = "countries" })
		</div>
		<div class="field field-select">
			<label for="TimeZone">@Resources.Titles.TimeZone:</label>
			@Html.DropDownListFor(x => x.TimeZoneId, Model.TimeZones.SelectList(x => x.Id, x => x.Display), new { @class = "timezones" })
		</div>
		<div class="field field-select">
			<label for="Dst">@Resources.Titles.DaylightSavingTime:</label>
			@Html.DropDownListFor(x => x.Dst, Model.Dsts.SelectList(), new { @class = "normal" })
		</div>
		<div class="field field-select">
			<label for="StartOfWeek">@Resources.Titles.StartOfTheWeek:</label>
			@Html.DropDownListFor(x => x.StartOfWeek, Model.StartOfWeeks.SelectList(), new { @class = "normal" })
		</div>
		<div class="field field-select">
			<label for="TimeFormat">@Resources.Titles.TimeFormat:</label>
			@Html.DropDownListFor(x => x.TimeFormat, Model.TimeFormats.SelectList(), new { @class = "normal" })
		</div>
		<div class="field field-button">
			@Html.AntiForgeryToken()
			<input type="submit" value="@Resources.Titles.CreateWith.FormatInvariant(Resources.Titles.Account)" />
		</div>
	</div>
	@{Html.EndForm();}
</div>